//Link of the question-https://practice.geeksforgeeks.org/problems/find-median-in-a-stream-1587115620/1#
// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;



 // } Driver Code Ends
class Solution{
    public:
    priority_queue<int> mx;
    priority_queue<int,vector<int>,greater<int> > mn;
    
    //Function to insert heap.
    void insertHeap(int &x){
        if(mx.size()==0 || mx.top()>x) mx.push(x);
        else mn.push(x);
        balanceHeaps();
    }
    
    //Function to balance heaps.
    void balanceHeaps(){
        if(mx.size()>mn.size()+1){
            mn.push(mx.top());
            mx.pop();
        }
        else if(mn.size()>mx.size()){
            mx.push(mn.top());
            mn.pop();
        }
    }
    
    //Function to return Median.
    double getMedian(){
        if(mx.size()==mn.size()){
            return (mx.top()+mn.top())/2.0;
        }
        return mx.top();
    }
};


// { Driver Code Starts.

int main()
{
    int n, x;
    int t;
    cin>>t;
    while(t--)
    {
    	Solution ob;
    	cin >> n;
    	for(int i = 1;i<= n; ++i)
    	{
    		cin >> x;
    		ob.insertHeap(x);
    	    cout << floor(ob.getMedian()) << endl;
    	}
    }
	return 0;
}  // } Driver Code Ends
