//Link of the question-https://practice.geeksforgeeks.org/problems/merge-k-sorted-arrays/1#
class Solution{
    public:
    void heapify(vector<int> &a,int n, int i){
        int maxInd=i;
        int l=2*i+1;
        int r=2*i+2;
        if(l<n && a[l]>a[maxInd]) maxInd=l;
        if(r<n && a[r]>a[maxInd]) maxInd=r;
        if(maxInd!=i){
            swap(a[i],a[maxInd]);
            heapify(a,n,maxInd);
        }
    }
    void heapsort(vector<int> &a,int n){
        for(int i=n/2-1;i>=0;i--){
            heapify(a,n,i); //heapify up
        }
        for(int i=n-1;i>=0;i--){
            swap(a[0],a[i]);
            heapify(a,i,0); //heapify down
        }
    }
    //Function to merge k sorted arrays.
    vector<int> mergeKArrays(vector<vector<int>> arr, int K){
        //code here
        vector<int> a(K*K);
        int n=0;
        for(int i=0;i<K;i++)
            for(int j=0;j<K;j++){
                a[n++]=arr[i][j];
                //cout<<a[n-1]<<" ";
            }
        //cout<<endl;
        
        heapsort(a,n);
        return a;
        
    }
};
