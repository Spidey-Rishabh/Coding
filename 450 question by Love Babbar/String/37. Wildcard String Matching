//Link of the question-https://practice.geeksforgeeks.org/problems/wildcard-string-matching1126/1
#include<bits/stdc++.h>
using namespace std;
class Solution{
    public:
    bool match(string pattern, string str){
        // code here
        int m=pattern.length(),n=str.length();
        if (m==0)
        return (n==0);
        bool lookup[n+1][m+1];
        memset(lookup, false, sizeof(lookup));
        lookup[0][0]=true;
        for(int j=1;j<=m;j++)
            if (pattern[j - 1] == '*')
                lookup[0][j]=lookup[0][j-1];
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(pattern[j-1]=='*')
                lookup[i][j]=lookup[i][j-1] || lookup[i-1][j];
                else if (pattern[j-1]=='?' || str[i-1]==pattern[j-1])
                    lookup[i][j]=lookup[i-1][j-1];
                else
                    lookup[i][j]=false;
        }
    }
    return lookup[n][m];
    }
};
int main(){
    int t;
    cin>>t;
    while(t--){
        string wild, pattern;
        cin>>wild>>pattern;
        
        Solution ob;
        if(ob.match(wild, pattern))
        cout<<"Yes\n";
        else
        cout<<"No\n";
    }
    return 0;
}
