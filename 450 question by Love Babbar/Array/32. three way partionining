// https://practice.geeksforgeeks.org/problems/three-way-partitioning/1#
class Solution{   
public:
    //Function to partition the array around the range such 
    //that array is divided into three parts.
    void threeWayPartition(vector<int>& a1,int a, int b)
    {
        // code here 
        int low = 0;
        int high = a1.size()-1;
        int i=0;
        while(i<=high)
        {
            if(a1[i]<a)
            {
                swap(a1[i],a1[low]);
                i++;
                low++;
            }
            else if(a1[i]>b)
            {
                swap(a1[i],a1[high]);
                high--;
            }
            else
            {
                i++;
            }
        }
    }
};
// Alternate

class Solution{   
public:
    //Function to partition the array around the range such 
    //that array is divided into three parts.
    void threeWayPartition(vector<int>& arr,int a, int b){
        // code here 
        int i=0,mid=0,j=arr.size()-1;
        while(mid<=j){
            if(arr[mid]<a) swap(arr[i++],arr[mid++]);
            else if(arr[mid]<=b) mid++;
            else swap(arr[mid],arr[j--]);
        }
    }
};
