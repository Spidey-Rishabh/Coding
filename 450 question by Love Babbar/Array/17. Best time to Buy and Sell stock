//Link of the question-https://leetcode.com/problems/best-time-to-buy-and-sell-stock/
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.size()==1) return 0;
        int diff[prices.size()];
        diff[0]=0;
        for(int i=1;i<prices.size();i++){
            diff[i]=prices[i]-prices[i-1];
        }
        //Now just apply kadane's algorithm
        int ans=INT_MIN,max_ending=0;
        for(int i=0;i<prices.size();i++){
            max_ending+=diff[i];
            if(ans<max_ending) ans=max_ending;
            if(max_ending<0) max_ending=0;
        }
        return ans;
    }
};
