//link of the question-https://practice.geeksforgeeks.org/problems/chocolate-distribution-problem3825/1#
#include <bits/stdc++.h>
using namespace std;
class Solution{
    public:
    long long findMinDiff(vector<long long> a, long long n, long long m){
    //code
    	if(m==0||n==0) return 0;
	if(n<m) return -1;
        sort(a.begin(),a.end());
        long long p1=0;
        long long p2=p1+m-1;
        long long ans=INT_MAX;
        while(p2!=n){
            ans=min(ans,a[p2]-a[p1]);
            p2++;
            p1++;
        }
        return ans;
    }
};
int main() {
	long long t;
	cin>>t;
	while(t--){
		long long n;
		cin>>n;
		vector<long long> a;
		long long x;
		for(long long i=0;i<n;i++){
			cin>>x;
			a.push_back(x);
		}
		long long m;
		cin>>m;
		Solution ob;
		cout<<ob.findMinDiff(a,n,m)<<endl;
	}
	return 0;
}
