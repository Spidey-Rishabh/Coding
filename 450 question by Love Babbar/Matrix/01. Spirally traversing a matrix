//Link of the question-https://practice.geeksforgeeks.org/problems/spirally-traversing-a-matrix-1587115621/1
#include <bits/stdc++.h> 
using namespace std; 
class Solution{   
    public:
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int m, int n) {
        // code here 
        int i,l=0,k=0;
        vector<int> v;
        while(k<m && l<n){
            for(i=l;i<n;i++) v.push_back(matrix[k][i]);
            k++;
            for(i=k;i<m;i++) v.push_back(matrix[i][n-1]);
            n--;
            if(k<m){
                for(i=n-1;i>=l;i--) v.push_back(matrix[m-1][i]);
                m--;
            }
            if(l<n){
                for(i=m-1;i>=k;i--) v.push_back(matrix[i][l]);
                l++;
            }
        }
        return v;
    }
};
int main(){
    int t;
    cin>>t;
    while(t--) {
        int r,c;
        cin>>r>>c;
        vector<vector<int> > matrix(r); 

        for(int i=0;i<r;i++){
            matrix[i].assign(c,0);
            for(int j=0;j<c;j++){
                cin>>matrix[i][j];
            }
        }
        solution ob;
        vector<int> result=ob.spirallyTraverse(matrix,r,c);
        for(int i=0;i<result.size();++i)
                cout<<result[i]<<" ";
        cout<<endl;
    }
    return 0;
}
