//Link of the question-https://practice.geeksforgeeks.org/problems/merge-sort/1
#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;
void printArray(int arr[], int size){
    int i;
    for (i=0; i < size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}
class Solution{
    public:
    void merge(int a[], int l, int m, int r){
         // Your code here
         int mx=max(a[m],a[r])+1;
         
         int  i=l,j=m+1,k=l;
         while(i<=m && j<=r && k<=r){
             int x=a[i]%mx;
             int y=a[j]%mx;
             if(x<=y){
                 a[k]+=(x*mx);
                 i++;
                 k++;
             }
             else{
                 a[k]+=(y*mx);
                 j++;
                 k++;
             }
         }
         while(i<=m){
             int x=a[i]%mx;
             a[k]+=(x*mx);
             i++;
             k++;
         }
         while(j<=r){
             int y=a[j]%mx;
             a[k]+=(y*mx);
             j++;
             k++;
         }
         for(int i=l;i<=r;i++) a[i]/=mx;
    }
    public:
    void mergeSort(int arr[], int l, int r){
        //code here
        if(l<r){
            int mid=l + (r-l)/2;
            mergeSort(arr,l,mid);
            mergeSort(arr,mid+1,r);
            merge(arr,l,mid,r);
        }
    }
};
int main(){
    int n,T,i;

    scanf("%d",&T);

    while(T--){
    
    scanf("%d",&n);
    int arr[n+1];
    for(i=0;i<n;i++)
      scanf("%d",&arr[i]);

    Solution ob;
    ob.mergeSort(arr, 0, n-1);
    printArray(arr, n);
    }
    return 0;
}
