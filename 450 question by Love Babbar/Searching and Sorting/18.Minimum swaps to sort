//Link of the question-https://practice.geeksforgeeks.org/problems/minimum-swaps/1#
#include<bits/stdc++.h>
using namespace std;
class Solution {
    public:
    //Function to find the minimum number of swaps required to sort the array. 
	int minSwaps(vector<int>&nums){
	    // Code here
	    int n=nums.size();
	    pair<int,int> pos[n];
	    for(int i=0;i<n;i++){
	        pos[i].first=nums[i];
	        pos[i].second=i;    
	    }
	    sort(pos,pos+n);
	    vector<bool> vis(n,false);
	    int ans=0;
	    for(int i=0;i<n;i++){
	        if(vis[i] || pos[i].second==i) continue;
	        int cycle=0,j=i;
	        while(!vis[j]){
	            vis[j]=1;
	            j=pos[j].second;
	            cycle++;
	        }
	        if(cycle>0){
	            ans+=cycle-1;
	        }
	    }
	    return ans;
	}
};
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n;
		cin >> n;
		vector<int>nums(n);
		for(int i = 0; i < n; i++)
			cin >> nums[i];
		Solution obj;
		int ans = obj.minSwaps(nums);
		cout << ans <<"\n";
	}
	return 0;
}
