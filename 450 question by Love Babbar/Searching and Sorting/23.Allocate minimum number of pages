//Link of the question-https://practice.geeksforgeeks.org/problems/allocate-minimum-number-of-pages0937/1
#include<bits/stdc++.h>
using namespace std;
class Solution {
    public:
    bool possible(int arr[],int n, int m,long long int value){
        int student_required=1,curr_sum=0;
        for(int i=0;i<n;i++){
            if(arr[i]>value) return false;
            if(curr_sum+arr[i]>value){
                student_required++;
                curr_sum=arr[i];
                if(student_required>m) return false;
            }
            else curr_sum+=arr[i];
        }
        return true;
    }
    int findPages(int arr[],int n,int m){
        //code here
        if(n<m) return -1;
        long long int sum=0;
        for(int i=0;i<n;i++) sum+=arr[i];
        int start=0,end=sum,result=INT_MAX;
        while(start<=end){
            int mid=(start+end)/2;
            if(possible(arr,n,m,mid)){
                result=mid;
                end=mid-1;
            }
            else start=mid+1;
        }
        return result;
    }
};
int main() {
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int A[n];
        for(int i=0;i<n;i++){
            cin>>A[i];
        }
        int m;
        cin>>m;
        Solution ob;
        cout << ob.findPages(A, n, m) << endl;
    }
    return 0;
}
