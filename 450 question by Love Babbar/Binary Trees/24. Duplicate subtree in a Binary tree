//Link of the question-https://practice.geeksforgeeks.org/problems/duplicate-subtree-in-binary-tree/1#
class Solution {
  public:
  const char MARKER = '$';
  unordered_set<string> subtrees;
  string dupSubUtil(Node *root){
        string s="";
        if (root==NULL) return s+MARKER;
        string lStr=dupSubUtil(root->left);
        if (lStr.compare(s) == 0)
        return s;
        string rStr=dupSubUtil(root->right);
        if (rStr.compare(s)==0) return s;
        s = s + root->data + lStr + rStr;
        if (s.length()>3 && subtrees.find(s)!=subtrees.end()) return "";
        subtrees.insert(s);
        return s;
    }
    int dupSub(Node *root) {
        // code here
        string str=dupSubUtil(root);
        int flag;
        (str.compare("")==0) ? flag=1: flag=0;
        return flag;
    }
};
