//Link of the question-https://practice.geeksforgeeks.org/problems/check-mirror-in-n-ary-tree1528/1
class Solution {
  public:
    int checkMirrorTree(int n,int e,int A[],int B[]) {
        // code here
        stack<int> v1[n+1];
        queue<int> v2[n+1];
        for (int i=0;i<2*e;i+=2) {
            v1[A[i]].push(A[i+1]);
        }
        for (int i=0;i<2*e;i+=2) {
            v2[B[i]].push(B[i+1]);
        }
        int flag;
        for(int i=1;i<=n;i++){
            stack<int>& s=v1[i];
            queue<int>& q=v2[i];
            flag=1;
            while(!s.empty() && !q.empty()){
                if(s.top()!=q.front()) {
                    flag=0;
                    break;
                }
                s.pop();
                q.pop();
            }
            if(flag==0)
                break;
        }
        return flag;
    }
};
