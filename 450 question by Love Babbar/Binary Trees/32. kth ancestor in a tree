//Link of the question-https://practice.geeksforgeeks.org/problems/kth-ancestor-in-a-tree/1#
int treeSize = 0;
void height(Node *root){
    if(!root)return;
    height(root->left);
    treeSize++;
    height(root->right);
}
int kthAncestor1(Node *root,int n,int k,int node){
	int ancestors[n+1]={0};
	ancestors[root->data]=-1;
	queue<Node*> q;
	q.push(root);
	while(!q.empty()){
		Node* temp=q.front();
		q.pop();
		if(temp->left){
			ancestors[temp->left->data]=temp->data;
			q.push(temp->left);
		}
		if(temp->right){
			ancestors[temp->right->data]=temp->data;
			q.push(temp->right);
		}
	} 
	int count=0;
	while(node!=-1){ 
		node=ancestors[node];
		count++;
		if(count==k)break;
	}
	return node;
} 
int kthAncestor(Node *root,int k,int node){
    height(root);
    return kthAncestor1(root, treeSize, k, node);
}
