class Solution {
public:
    int find(vector<vector<int>>& students, vector<vector<int>>& mentors,int si,int mi){
        int ans=0;
        for(int i=0;i<students[si].size();i++){
            if(students[si][i]==mentors[mi][i]) ans++;
        }
        return ans;
    }
    void solve(vector<vector<int>>& students, vector<vector<int>>& mentors,vector<bool> takenM,int ind,int temp,int &res){
        if(ind>=students.size()){
            res=max(res,temp);
            return ;
        }
        int ans=0;
        for(int i=0;i<students.size();i++){
            if(takenM[i]==false){
                takenM[i]=true;
                ans=find(students,mentors,ind,i);
                solve(students,mentors,takenM,ind+1,temp+ans,res);
                takenM[i]=false;
            }
        }
    }
    int maxCompatibilitySum(vector<vector<int>>& students, vector<vector<int>>& mentors) {
        int n=students.size(),res=0;
        vector<bool> takenM(n,false);
        solve(students,mentors,takenM,0,0,res);
        return res;
    }
};
